/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PCCS;

import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.KeyCode.P;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;


public class IndividualLedgerDialog extends javax.swing.JDialog {
Adminpage refAdminpageIndLedger=LoginPage.homepage;

 JFormattedTextField FromDateTF,ToDateTF;
    /**
    /**
     * Creates new form IndividualLedgerDialog
     * @param parent
     * @param modal
     */
    public IndividualLedgerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
      
        setLocation(30,30);  
       JSpinner.DateEditor tem_fromeditor=(JSpinner.DateEditor)fromDateSP.getEditor();
        JSpinner.DateEditor tem_toeditor=(JSpinner.DateEditor)toDateSP.getEditor();
        FromDateTF=tem_fromeditor.getTextField();
        ToDateTF=tem_toeditor.getTextField();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        namelb = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        account_nolb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        designationlb = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        batchlb = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        INDLEDTable = new javax.swing.JTable();
        SpinnerDateModel modelFDSP=new SpinnerDateModel(new Date(),null,null,Calendar.DAY_OF_YEAR);
        fromDateSP = new javax.swing.JSpinner(modelFDSP);
        SpinnerDateModel modelTDSP=new SpinnerDateModel(new Date(),null,null,Calendar.DAY_OF_YEAR);
        toDateSP = new javax.swing.JSpinner(modelTDSP);
        getILBT = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        printILBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon("PBIcon.png").getImage());

        jPanel2.setPreferredSize(new java.awt.Dimension(1386, 460));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Individual Ledger", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(51, 51, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Name of AcHolder");

        namelb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        namelb.setText("jLabel5");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("AccountNo");

        account_nolb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        account_nolb.setText("jLabel7");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Designation");

        designationlb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        designationlb.setText("jLabel6");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("BatchNo");

        batchlb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        batchlb.setText("jLabel8");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namelb, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(designationlb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(account_nolb, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(batchlb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(164, 164, 164))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(account_nolb)
                        .addComponent(jLabel3)
                        .addComponent(namelb))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(designationlb)
                    .addComponent(jLabel2)
                    .addComponent(batchlb)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Police Cooperative Credit Society Bilaspur");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        INDLEDTable.setAutoCreateRowSorter(true);
        INDLEDTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        INDLEDTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        INDLEDTable.setFillsViewportHeight(true);
        INDLEDTable.setName(""); // NOI18N
        INDLEDTable.setRowHeight(20);
        INDLEDTable.setRowMargin(5);
        INDLEDTable.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(INDLEDTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 69, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(119, 119, 119))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );

        JSpinner.DateEditor fromeditor=new JSpinner.DateEditor(fromDateSP,"yyyy-MM-dd");
        fromDateSP.setEditor(fromeditor);
        fromDateSP.setToolTipText("yyyy-mm-dd");
        fromDateSP.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        JSpinner.DateEditor toeditor=new JSpinner.DateEditor(toDateSP,"yyyy-MM-dd");
        toDateSP.setEditor(toeditor);
        toDateSP.setToolTipText("yyyy-mm-dd");
        toDateSP.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        getILBT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getILBT.setForeground(new java.awt.Color(0, 102, 0));
        getILBT.setText("Get !");
        getILBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getILBTActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("From");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("TO");

        printILBT.setText("Print");
        printILBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printILBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fromDateSP, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toDateSP, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(getILBT)
                        .addGap(121, 121, 121)
                        .addComponent(printILBT))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromDateSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDateSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(getILBT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printILBT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getILBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getILBTActionPerformed
        // TODO add your handling code here:
        try{
            getIndividualLedger();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error related to database","PCCS-ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_getILBTActionPerformed
public void getIndividualLedger() throws SQLException
    {
      
            String FromDate=FromDateTF.getText().trim();
           String ToDate=ToDateTF.getText().trim();
        Connection con=refAdminpageIndLedger.con;
 PreparedStatement       pstCustomer=con.prepareStatement("select name,designation,batch_no from customer where account_no=?");
        int account_no=refAdminpageIndLedger.account_no_IL;  
        
       pstCustomer.setInt(1, account_no);
        ResultSet rs=pstCustomer.executeQuery();
         if(rs.next())
         {
             account_nolb.setText(""+account_no);//accountno
             namelb.setText(rs.getString(1));//name
            designationlb.setText(rs.getString(2));//desg
             batchlb.setText(rs.getString(3));//batch
           }
         rs.close();
         pstCustomer.close();
         //share Individual Ledger
    PreparedStatement    pstShare=con.prepareStatement("create temporary table temp_share select  account_no,"
                 + "particulars ,deposit_amount,withdraw_amount,balance from share where account_no=? and particulars between ? and ? ");
         pstShare.setInt(1, account_no);
         pstShare.setString(2,FromDate);
         pstShare.setString(3,ToDate);
         
         pstShare.executeUpdate();
         pstShare.close();
         pstShare =con.prepareStatement("create temporary table temp_share_interest select  account_no,particulars"
                 + " ,deposit_interest,withdraw_interest,total_interest from share_interest where account_no=? and particulars between ? and ? ");
         pstShare.setInt(1, account_no);
          pstShare.setString(2,FromDate);
         pstShare.setString(3,ToDate);
         pstShare.executeUpdate();
         pstShare.close();
         
       Statement   stShare=con.createStatement();
       stShare.executeUpdate("create temporary table share_IL1 select temp_share.account_no,"
               + "temp_share.particulars as sortbydate,temp_share.deposit_amount,"
               + "temp_share.withdraw_amount,\n" +
"temp_share.balance ,temp_share_interest.deposit_interest,\n" +
"temp_share_interest.withdraw_interest,temp_share_interest.total_interest\n" +
"from temp_share  left join temp_share_interest    "
               + "on temp_share.particulars=temp_share_interest.particulars");
        stShare.executeUpdate("create temporary table share_IL2 select temp_share_interest.account_no,"
                + "temp_share_interest.particulars ,temp_share.deposit_amount,temp_share.withdraw_amount,\n" +
"temp_share.balance ,temp_share_interest.deposit_interest,\n" +
"temp_share_interest.withdraw_interest,temp_share_interest.total_interest\n" +
"from temp_share  right join temp_share_interest    "
                + "on temp_share.particulars=temp_share_interest.particulars");
       rs= stShare.executeQuery("(select * from share_IL1)\n" +
" union\n" +
"(select * from share_IL2)\n" +
"order by  sortbydate asc");
        
         String shareParticulars;
         int shareWithdraw,shareDeposit,shareBalance,shareDepInt,shareWrInt,shareTotInt;
         DefaultTableModel tm=(DefaultTableModel)INDLEDTable.getModel();
              while(true)
              {
                  int c=tm.getRowCount();
                  if(c==0)
                      break;
                  else
                      tm.removeRow(0);
              }
             
        Object tbLabel[]={"","","","<html><body><b>Share Table</b></html>","","",""};
       Object tbShareHeader[]= {"Particulars", "Deposit", "Withdraw", "Balance", "Int dep", "Int Wr", "Int Bal"};
       
        tm.addRow(tbLabel);
      
        tm.addRow(tbShareHeader);
       while(rs.next())
        {
            shareParticulars=rs.getString(2);
            shareWithdraw=rs.getInt(3);
              
            shareDeposit=rs.getInt(4);
            shareBalance=rs.getInt(5);
             shareDepInt=rs.getInt(6);
            shareWrInt=rs.getInt(7);
            shareTotInt=rs.getInt(8);
            Object tb[]={shareParticulars,shareWithdraw,shareDeposit,shareBalance,shareDepInt,shareWrInt,shareTotInt};
            for(int i=0;i<tb.length;i++)
            {
               if(tb[i].equals(0))
               { 
                   tb[i]=null;
               
               }
            }
            tm.addRow(tb);
          }
       rs.close();
       stShare.executeUpdate("drop temporary table temp_share,temp_share_interest,share_IL1,share_IL2 ");
      stShare.close();
       //share Individual ledger close
       Object tbnull[]=null;
       Object tbRDLabel[]={"","","","<html><body><b>RD Table</b></html>","","",""};
       Object tbRdHeader[]= {"Particulars", "Deposit", "Withdraw", "Balance", "Int dep", "Int Wr.", "Int Bal"};
       tm.addRow(tbnull);
        tm.addRow(tbRDLabel);
        tm.addRow(tbRdHeader);
        
        //start rd Individual Ledger
    PreparedStatement      pstRD=con.prepareStatement("create temporary table temp_rd select  account_no,particulars ,"
                  + "deposit_amount,withdraw_amount,balance from rd where account_no=? and particulars between ? and ? ");
         pstRD.setInt(1, account_no);
          pstRD.setString(2,FromDate);
         pstRD.setString(3,ToDate);
         pstRD.executeUpdate();
         pstRD.close();
         pstRD =con.prepareStatement("create temporary table temp_rd_interest select  account_no,particulars ,"
                 + "deposit_interest,withdraw_interest,total_interest from rd_interest where account_no=? and particulars between ? and ? ");
         pstRD.setInt(1, account_no);
          pstRD.setString(2,FromDate);
         pstRD.setString(3,ToDate);
         pstRD.executeUpdate();
         pstRD.close();
         
       Statement   stRD=con.createStatement();
      
       stRD.executeUpdate(" create temporary table rdIL1 select temp_rd.account_no,temp_rd.particulars as sortbydate,"
               + "temp_rd.deposit_amount,temp_rd.withdraw_amount,\n" +
"temp_rd.balance ,temp_rd_interest.deposit_interest,\n" +
"temp_rd_interest.withdraw_interest,temp_rd_interest.total_interest\n" +
"from temp_rd  left join temp_rd_interest    on temp_rd.particulars=temp_rd_interest.particulars ");
       
       stRD.executeUpdate(" create temporary table rdIL2 select temp_rd_interest.account_no,temp_rd_interest.particulars as sortbydate,"
               + "temp_rd.deposit_amount,temp_rd.withdraw_amount,\n" +
"temp_rd.balance ,temp_rd_interest.deposit_interest,\n" +
"temp_rd_interest.withdraw_interest,temp_rd_interest.total_interest\n" +
"from temp_rd  right join temp_rd_interest    on temp_rd.particulars=temp_rd_interest.particulars ");
        
          rs= stRD.executeQuery("(select * from rdIL1)\n" +
" union\n" +
"(select * from rdIL2)\n" +
"order by  sortbydate asc");
         String rdParticulars;
         int rdWithdraw,rdDeposit,rdBalance,rdDepInt,rdWrInt,rdTotInt;
        
         while(rs.next())
        {
           rdParticulars=rs.getString(2);
            rdWithdraw=rs.getInt(3);
            rdDeposit=rs.getInt(4);
            rdBalance=rs.getInt(5);
            rdDepInt=rs.getInt(6);
            rdWrInt=rs.getInt(7);
            rdTotInt=rs.getInt(8);
            Object tb[]={rdParticulars,rdWithdraw,rdDeposit,rdBalance,rdDepInt,rdWrInt,rdTotInt};
              for(int i=0;i<tb.length;i++)
            {
               if(tb[i].equals(0))
               { 
                   tb[i]=null;
               
               }
            }
            tm.addRow(tb);
                
               
            
        }
         rs.close();
          stRD.executeUpdate("drop temporary table temp_rd,temp_rd_interest,rdIL1,rdIL2");
       stRD.close();
       //end of rd individual ledger
        Object tbsLabel[]={"","","","<html><body><b>Loan Table</b></html>","","",""}; 
        Object tbLoanHeader[]={  "Date", "Withdraw", "Credit", "Balance", "cr Int", "Bal Int"};
        tm.addRow(tbnull);
        tm.addRow(tbsLabel);
        tm.addRow(tbLoanHeader);
        
      
   PreparedStatement     pstLoan=con.prepareStatement("select * from loan_payment where account_no=? and particulars between ? and ? order by particulars asc");
        pstLoan.setInt(1, account_no);
         pstLoan.setString(2,FromDate);
         pstLoan.setString(3,ToDate);
        rs=pstLoan.executeQuery();
        String date;
        int Dr,Cr,Bal,cr_int,Bal_int;
      
            
           
        while(rs.next())
        {
           date=rs.getString(1);
           Dr =rs.getInt(3);
           Cr=rs.getInt(4);
           cr_int =rs.getInt(6);
           Bal =rs.getInt(5);
           Bal_int=rs.getInt(7);
           Object tb[]={date,Dr,Cr,Bal,cr_int,Bal_int};
             for(int i=0;i<tb.length;i++)
            {
               if(tb[i].equals(0))
               { 
                   tb[i]=null;
               
               }
            }
            tm.addRow(tb);
            
        }
        rs.close();
        pstLoan.close();
    
    }
    private void printILBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printILBTActionPerformed
        // TODO add your handling code here:
       
        
        String footerMsg="***Police Co-operative Credit Society Bilaspur(Individual Ledger)***";
        String HeaderMsg="Name:  "+namelb.getText()+"           Account No:  "+account_nolb.getText();
                
        MessageFormat ILHeader=new MessageFormat(HeaderMsg);
       
        MessageFormat ILFooter=new MessageFormat(footerMsg);
    try {
       
        INDLEDTable.print(JTable.PrintMode.NORMAL,ILHeader,ILFooter);
    } catch (PrinterException ex) {
        Logger.getLogger(IndividualLedgerDialog.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_printILBTActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable INDLEDTable;
    private javax.swing.JLabel account_nolb;
    private javax.swing.JLabel batchlb;
    private javax.swing.JLabel designationlb;
    javax.swing.JSpinner fromDateSP;
    private javax.swing.JButton getILBT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel namelb;
    private javax.swing.JButton printILBT;
    javax.swing.JSpinner toDateSP;
    // End of variables declaration//GEN-END:variables
}
