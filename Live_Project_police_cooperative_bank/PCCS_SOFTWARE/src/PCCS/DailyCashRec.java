/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PCCS;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SpinnerDateModel;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;


public class DailyCashRec extends javax.swing.JFrame {

    /**
     * Creates new form DailyCashRec
     */
   
  
    JFormattedTextField DateFTF; 
    public DailyCashRec() {
        initComponents();
        JSpinner.DateEditor editor=(JSpinner.DateEditor)dateSpinner.getEditor();
        DateFTF=editor.getTextField();
        setLocation(30,50);   
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SpinnerDateModel model=new SpinnerDateModel(new Date(),null,null,Calendar.DAY_OF_YEAR);
        dateSpinner = new javax.swing.JSpinner(model);
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dailycashrecTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PCCS");
        setIconImage(new javax.swing.ImageIcon("PBIcon.png").getImage());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Police Co-operative credit society Bilaspur");

        JSpinner.DateEditor editor=new JSpinner.DateEditor(dateSpinner,"yyyy-MM-dd");
        dateSpinner.setEditor(editor);
        dateSpinner.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dateSpinner.setToolTipText("yyyy-mm-dd");
        dateSpinner.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        // Code adding the component to the parent container - not shown here

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Daily Cash Recieved");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("GetDCR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        dailycashrecTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dailycashrecTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "<html><body color=blue><b>SI.NO</b></body></html>", "<html><body color=blue><b>Acct No</b></body></html>", "<html><body color=blue><b>Name</b></body></html>", "<html><body color=blue><b>Voucher No</b></body></html>", "<html><body color=blue><b>Share</b></body></html>", "<html><body color=blue><b>Mice</b></body></html>", "<html><body color=blue><b>E Fee</b></body></html>", "<html><body color=blue><b>RD</b></body></html>", "<html><body color=blue><b>Loan Install</b></body></html>", "<html><body color=blue><b>Loan Int</b></body></html>", "<html><body color=blue><b>Total Loan</b></body></html>", "<html><body color=blue><b>Totall Amt</b></body></html>"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dailycashrecTable.setRowHeight(25);
        jScrollPane1.setViewportView(dailycashrecTable);
        if (dailycashrecTable.getColumnModel().getColumnCount() > 0) {
            dailycashrecTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            dailycashrecTable.getColumnModel().getColumn(1).setPreferredWidth(40);
            dailycashrecTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            dailycashrecTable.getColumnModel().getColumn(4).setPreferredWidth(45);
            dailycashrecTable.getColumnModel().getColumn(5).setPreferredWidth(35);
            dailycashrecTable.getColumnModel().getColumn(6).setPreferredWidth(35);
            dailycashrecTable.getColumnModel().getColumn(7).setPreferredWidth(45);
            dailycashrecTable.getColumnModel().getColumn(8).setPreferredWidth(60);
            dailycashrecTable.getColumnModel().getColumn(9).setPreferredWidth(45);
            dailycashrecTable.getColumnModel().getColumn(10).setPreferredWidth(45);
            dailycashrecTable.getColumnModel().getColumn(11).setPreferredWidth(45);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(dateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel2)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateSpinner))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         try {
        String date=DateFTF.getText();
        // TODO add your handling code here:
        dailyCashReceived(date);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null,"ERROR"+ex,"PCCS",JOptionPane.ERROR_MESSAGE); 
    }
    }//GEN-LAST:event_jButton1ActionPerformed

   public void dailyCashReceived(String dateDCR)throws Exception
   {
        Connection con=LoginPage.homepage.con;
    PreparedStatement      pstDlyCsRec=con.prepareStatement("create temporary table temp_share_rec select share.account_no,share.deposit_amount as share_deposit_amount  from share where share.particulars=? \n" +
" and share.deposit_amount is not null");
        pstDlyCsRec.setString(1,dateDCR);
        pstDlyCsRec.executeUpdate();
        pstDlyCsRec=con.prepareStatement("create temporary table temp_rd_rec select rd.account_no,rd.deposit_amount as rd_deposit_amount\n" +
"from rd where rd.particulars=? and rd.deposit_amount is not null");
          pstDlyCsRec.setString(1,dateDCR);
        pstDlyCsRec.executeUpdate();
          pstDlyCsRec=con.prepareStatement("create temporary table temp_loan_rec select loan_payment.account_no,\n" +
"loan_payment.installment_paid as loan_installment_paid,loan_payment.interest_paid as loan_interest_paid from loan_payment\n" +
"where loan_payment.particulars=? and loan_payment.installment_paid is not null");
            pstDlyCsRec.setString(1,dateDCR);
         pstDlyCsRec.executeUpdate();
         
        Statement     stDlyCsRec=con.createStatement();
        stDlyCsRec.executeUpdate ("create temporary table temp_dailycashrec1 select  temp_share_rec.account_no,temp_share_rec.share_deposit_amount ,\n" +
"temp_rd_rec.rd_deposit_amount  ,\n" +
"temp_loan_rec.loan_installment_paid,temp_loan_rec.loan_interest_paid\n" +
"from temp_share_rec left join   temp_rd_rec on temp_share_rec.account_no=temp_rd_rec.account_no left join  temp_loan_rec\n" +
"on temp_loan_rec.account_no=temp_share_rec.account_no");
          
          stDlyCsRec.executeUpdate("create temporary table temp_dailycashrec2 select  temp_rd_rec.account_no,temp_share_rec.share_deposit_amount ,\n" +
"temp_rd_rec.rd_deposit_amount  ,\n" +
"temp_loan_rec.loan_installment_paid,temp_loan_rec.loan_interest_paid\n" +
"from temp_share_rec right join   temp_rd_rec on temp_share_rec.account_no=temp_rd_rec.account_no left join  temp_loan_rec\n" +
"on temp_loan_rec.account_no=temp_rd_rec.account_no");
           
          stDlyCsRec.executeUpdate ("create temporary table temp_dailycashrec3 select  temp_loan_rec.account_no,temp_share_rec.share_deposit_amount ,\n" +
"temp_rd_rec.rd_deposit_amount  ,\n" +
"temp_loan_rec.loan_installment_paid,temp_loan_rec.loan_interest_paid\n" +
"from temp_rd_rec right join   temp_loan_rec on temp_loan_rec.account_no=temp_rd_rec.account_no left join  temp_share_rec\n" +
"on temp_loan_rec.account_no=temp_share_rec.account_no");
            
          stDlyCsRec.executeUpdate("create temporary  table temp_dailycashrec\n" +
"(select * from temp_dailycashrec1)\n" +
"union\n" +
"(select * from temp_dailycashrec2)\n" +
"union\n" +
"(select * from temp_dailycashrec3)");
           pstDlyCsRec=con.prepareStatement("create temporary table dailycashrec( select customer.name,\n" +
"if(customer.doac=?,customer.voucher_no,null)as voucher_no,\n" +
"temp_dailycashrec.account_no,\n" +
"temp_dailycashrec.share_deposit_amount,if(customer.doac=?,customer.entry_fee,null)as \n" +
"entry_fee,if(customer.doac=?,customer.mice,null)as mice,temp_dailycashrec.rd_deposit_amount\n" +
",temp_dailycashrec.loan_installment_paid,temp_dailycashrec.loan_interest_paid\n" +
"from temp_dailycashrec  inner join customer using(account_no))");
          pstDlyCsRec.setString(1, dateDCR);
           pstDlyCsRec.setString(2, dateDCR);
            pstDlyCsRec.setString(3, dateDCR);
            pstDlyCsRec.executeUpdate();
            
          ResultSet rs= stDlyCsRec.executeQuery("select * from dailycashrec");
     
    DefaultTableModel tmDCR=(DefaultTableModel)dailycashrecTable.getModel();
              while(true)
              {
                  int c=tmDCR.getRowCount();
                  if(c==0)
                      break;
                  else
                      tmDCR.removeRow(0);
              }
           int   SI_NO=0;
         while(rs.next())
        {
           // String particulars=rs.getString(1);
            String  name=rs.getString(1);
            String voucher_no=rs.getString(2);
              int  account_no=rs.getInt(3);
              int share_dep =rs.getInt(4);
              short entry_fee=rs.getShort(5);
              short mice=rs.getShort(6);
               int rd_dep=rs.getInt(7);
               int loan_ins=rs.getInt(8);
               int loan_int=rs.getInt(9);
               int loan_tot=loan_ins+loan_int;
               int total_amount=loan_tot+share_dep+entry_fee+mice+rd_dep;
          
                SI_NO++;
               Object tb[]={SI_NO,account_no,name,voucher_no,share_dep,mice,entry_fee,rd_dep,loan_ins,loan_int,loan_tot,total_amount};
               
               tmDCR.addRow(tb);
            
        }
         rs.close();
         rs= stDlyCsRec.executeQuery("select sum(share_deposit_amount)"
                 + ",sum(entry_fee),sum(mice),sum(rd_deposit_amount),"
                 + "sum(loan_installment_paid),sum(loan_interest_paid) from dailycashrec");
        
         if(rs.next())
         {   Object nullOb[]={};
             tmDCR.addRow(nullOb);
            
            // <html><body bgcolor=yellow><b>"+var+"</b></body></html>;
           int TOTAL_SHARE=rs.getInt(1);
             int TOTAL_EF=rs.getInt(2);
             int TOTAL_MICE=rs.getInt(3);
             int TOTAL_RD=rs.getInt(4);
             int TOTAL_LINS=rs.getInt(5);
             int TOTAL_LINT=rs.getInt(6);
             int TOTAL_LOAN=TOTAL_LINS+TOTAL_LINT;
             int TOTAL_AMT_REC=TOTAL_LOAN+TOTAL_SHARE+TOTAL_EF+TOTAL_RD+TOTAL_MICE;
            int i= tmDCR.getRowCount();
            
            Object tb[]={ null,null, "<html><body bgcolor=yellow><b>Date: "+dateDCR+"</b></body></html>"
                    ,"<html><body bgcolor=yellow><b>TOTAL</b></body></html>",
               "<html><body bgcolor=yellow><b>"+ TOTAL_SHARE+"</b></body></html>",
                 "<html><body bgcolor=yellow><b>"+ TOTAL_MICE+"</b></body></html>",
                  "<html><body bgcolor=yellow><b>"+ TOTAL_EF+"</b></body></html>",
                 "<html><body bgcolor=yellow><b>"+ TOTAL_RD+"</b></body></html>",
                "<html><body bgcolor=yellow><b>"+ TOTAL_LINS+"</b></body></html>",
                  "<html><body bgcolor=yellow><b>"+ TOTAL_LINT+"</b></body></html>",
                  "<html><body bgcolor=yellow><b>"+ TOTAL_LOAN+"</b></body></html>",
                "<html><body bgcolor=yellow><b>"+ TOTAL_AMT_REC+"</b></body></html>"};
             tmDCR.addRow(tb);
         }
         rs.close();
         stDlyCsRec.executeUpdate("drop temporary table temp_share_rec,temp_rd_rec,temp_loan_rec,temp_dailycashrec1,temp_dailycashrec2,temp_dailycashrec3,"
             + "temp_dailycashrec,dailycashrec");
         pstDlyCsRec.close();
         stDlyCsRec.close();
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dailycashrecTable;
    private javax.swing.JSpinner dateSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
